#!/usr/bin/env python

import argparse
import json
from pathlib import Path

ICONS = {
    'numpy': '[![NumPy](https://img.shields.io/badge/NumPy-{0}-013243)](https://urob.github.io/numpy-mkl/numpy/)',
    'scipy': '[![SciPy](https://img.shields.io/badge/SciPy-{0}-8caae6)](https://urob.github.io/numpy-mkl/scipy/)',
    'mkl_service': '[![mkl-service](https://img.shields.io/badge/mkl--service-{0}-3b5526)](https://urob.github.io/numpy-mkl/mkl-service/)',
}


def fetch_builds(path):
    if isinstance(path, str):
        path = Path(path)
    store = json.loads(path.read_text()) if path.exists() else {}
    return list(store.keys())


def fetch_versions(package, builds):
    versions = {_.split('-')[1] for _ in builds if _.startswith(package)}
    formatted = {format_version(_) for _ in versions}
    return '_%7C_'.join(sorted(formatted))


def format_version(version):
    major, minor, patch = version.split('.')
    return '.'.join((major, minor))


def make_icon(package, builds):
    versions = fetch_versions(package, builds)
    return ICONS[package].format(versions)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Update version icons')
    parser.add_argument('file', type=str, help='file containing badges')
    parser.add_argument('-s', '--store', required=True, type=str, help='store file')

    args = parser.parse_args()
    file = Path(args.file)
    builds = fetch_builds(Path(args.store))

    with file.open() as f:
        lines = f.readlines()

    for p in ('numpy', 'scipy', 'mkl_service'):
        for i, line in enumerate(lines):
            if line.startswith(ICONS[p][:45]):
                lines[i] = make_icon(p, builds) + '\n'
                break
        else:
            raise ValueError(f'No icon found for {p}')

    with file.open('w') as f:
        f.writelines(lines)
